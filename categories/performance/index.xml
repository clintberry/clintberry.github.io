<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Performance on Clint Berry</title>
    <link>http://clintberry.github.io/categories/performance/</link>
    <description>Recent content in Performance on Clint Berry</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 05 Nov 2011 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://clintberry.github.io/categories/performance/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Siege Testing Your Site Behind a Login</title>
      <link>http://clintberry.github.io/2011/siege-testing-site-login/</link>
      <pubDate>Sat, 05 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>http://clintberry.github.io/2011/siege-testing-site-login/</guid>
      <description>&lt;p&gt;I use &lt;a href=&#34;http://www.joedog.org/index/siege-home&#34; target=&#34;_blank&#34;&gt;Siege&lt;/a&gt; to test my web applications and get an idea of how much traffic they can sustain. It is a great tool and I suggest you read more about it &lt;a href=&#34;http://www.joedog.org/index/siege-home&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A few days ago, I needed to test a part of my application that was behind a login. I hit up UPHPU user group on IRC, and &lt;a href=&#34;http://www.justincarmony.com/&#34; target=&#34;_blank&#34;&gt;Carmony&lt;/a&gt; (a master website optimizer) suggested logging in on my browser and then hijacking the session in siege by setting header values. That is a great idea, but seems overly difficult. I doubted that I was the only one that ever wanted to do this. Isn&amp;#8217;t there an easier way?&lt;/p&gt;

&lt;p&gt;Sure enough, I found the answer on Server Fault:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://serverfault.com/questions/292679/stress-login-area-with-siege&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://serverfault.com/questions/292679/stress-login-area-with-siege&#34;&gt;http://serverfault.com/questions/292679/stress-login-area-with-siege&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Siege has a setting in the .siegerc file for this very scenario, although it isn&amp;#8217;t documented.&lt;/p&gt;

&lt;p&gt;Simply set the login-url value with a user and password and it will login for you and perform the tests.&lt;/p&gt;

&lt;pre class=&#34;wp-code-highlight prettyprint&#34;&gt;login-url = http://YourSite.com/login.php POST name=Clint&amp;amp;pass=MyPassword&lt;/pre&gt;

&lt;p&gt;So cool!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>