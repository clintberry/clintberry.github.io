<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Angular on Clint Berry</title>
    <link>https://clintberry.com/categories/angular/</link>
    <description>Recent content in Angular on Clint Berry</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 29 Apr 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://clintberry.com/categories/angular/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Modular AngularJS App Design</title>
      <link>https://clintberry.com/2013/modular-angularjs-application-design/</link>
      <pubDate>Mon, 29 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://clintberry.com/2013/modular-angularjs-application-design/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://clintberry.com/images/angular-module1.png&#34; alt=&#34;angular module&#34; width=&#34;225&#34; height=&#34;200&#34; class=&#34;alignleft size-full wp-image-836&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I am a sucker for modules. Something about bundling a set of functionality and display logic into a module that can be easily redistributed for many apps makes my skin tingle. So when I saw that &amp;#8220;modules&amp;#8221; were a big part of the AngularJS methodology, I was super excited to try it out. I quickly realized however, that most of the examples online used one module for the entire application, which didn&amp;#8217;t seem all that modular to me.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AngularJS WebSocket Service Example</title>
      <link>https://clintberry.com/2013/angular-js-websocket-service/</link>
      <pubDate>Tue, 23 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://clintberry.com/2013/angular-js-websocket-service/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://clintberry.com/images/angular_logofull.png&#34; alt=&#34;angular_logofull&#34; title=&#34;angular_logofull&#34; width=&#34;382&#34; height=&#34;99&#34; class=&#34;alignnone size-full wp-image-787&#34; /&gt;&lt;/p&gt;

&lt;p&gt;At my curent company we are using Angular.js for a new desktop application (yes, a desktop application, but I won&amp;#8217;t get into that). Our app gets its data and events from a web service via a WebSocket connection. Angular comes bundled with some great tools to connect to REST servers, but it doesn&amp;#8217;t come with anything to help you with real-time data (and it probably shouldn&amp;#8217;t).&lt;/p&gt;

&lt;p&gt;Here is an example of an Angular service (factory) that uses WebSockets to get data:&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>